apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-resolved-w-kong.yml -o kompose-w-kong
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: kong-database
  name: kong-database
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kong-database
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-resolved-w-kong.yml -o kompose-w-kong
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/greentable-kong-net: "true"
        io.kompose.service: kong-database
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: kong
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_USER
              value: kong
          image: postgres:9.6
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - kong
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: kong-database
          ports:
            - containerPort: 5432
          resources: {}
          # volumeMounts:
          #   - mountPath: /var/lib/postgresql/data
          #     name: pgdata
      restartPolicy: Always
      # volumes:
      #   - name: pgdata
      #     persistentVolumeClaim:
      #       claimName: pgdata
status: {}
